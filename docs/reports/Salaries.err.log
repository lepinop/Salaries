Traceback (most recent call last):
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 1005, in async_execute_cell
    exec_reply = await self.task_poll_for_reply
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 806, in _async_poll_for_reply
    error_on_timeout_execute_reply = await self._async_handle_timeout(timeout, cell)
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 856, in _async_handle_timeout
    raise CellTimeoutError.error_from_timeout_and_cell(
nbclient.exceptions.CellTimeoutError: A cell timed out while it was being executed, after 30 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
['ridge = Pipeline(steps=[("preprocessor", preprocessor), ("model", Ridge())])', 'lasso = Pipeline(steps=[("preprocessor", preprocessor), ("model", Lasso())])', 'knn = Pipeline(steps=[("preprocessor", preprocessor), ("model", KNeighborsRegressor())])', 'dtree = Pipeline(steps=[("preprocessor", preprocessor), ("model", DecisionTreeRegressor(random_state=42))])', 'svr = Pipeline(steps=[("preprocessor", preprocessor), ("model", SVR())])']
...
['xgb_search = RandomizedSearchCV(xgb, xgb_params, n_iter=10, cv=3, scoring="neg_mean_squared_error", random_state=42, n_jobs=-1)', 'mlp_search = RandomizedSearchCV(mlp, mlp_params, n_iter=10, cv=3, scoring="neg_mean_squared_error", random_state=42, n_jobs=-1)', '', 'for search in [ridge_search, lasso_search, knn_search, dtree_search, svr_search, xgb_search, mlp_search]:', '    search.fit(X_train_reg, y_train_reg)']
-------------------

