Traceback (most recent call last):
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\LUIS PINO\miniconda3\envs\ml_venv\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# 2) Datos + normalizaci√≥n de t√≠tulos + splits 
DATA_PATH = "salaries.csv"
if not os.path.exists(DATA_PATH):
    raise FileNotFoundError("No se encontr√≥ salaries.csv junto al notebook.")

df = pd.read_csv(DATA_PATH)
df = df[df["work_year"] == 2025].copy()

def normalize_title(s: str) -> str:
    s = str(s).lower().replace('-', ' ').replace('/', ' ')
    if 'data scientist' in s: return 'data scientist'
    if 'data engineer' in s: return 'data engineer'
    if 'data analyst'  in s: return 'data analyst'
    if 'machine learning' in s or 'ml engineer' in s: return 'ml engineer'
    if 'ai engineer' in s or 'artificial intelligence' in s: return 'ai engineer'
    if 'research' in s and ('ml' in s or 'ai' in s): return 'ml researcher'
    return s

if 'job_title' in df.columns:
    df['job_title'] = df['job_title'].map(normalize_title)

target_col = "salary_in_usd"
cat_cols = ["experience_level","employment_type","job_title",
            "employee_residence","company_location","company_size"]
num_cols = ["work_year","remote_ratio"]

X = df[cat_cols + num_cols].copy()
y = df[target_col].astype(float).values

strata = df["experience_level"] if "experience_level" in df.columns else None
X_temp, X_test, y_temp, y_test = train_test_split(X, y, test_size=0.20, random_state=RANDOM_STATE, stratify=strata)
strata_temp = X_temp["experience_level"] if "experience_level" in X_temp.columns else None
X_train, X_val, y_train, y_val = train_test_split(X_temp, y_temp, test_size=0.25, random_state=RANDOM_STATE, stratify=strata_temp)
strata_train = X_train["experience_level"] if "experience_level" in X_train.columns else None
X_trn, X_cal, y_trn, y_cal = train_test_split(X_train, y_train, test_size=0.20, random_state=RANDOM_STATE, stratify=strata_train)


------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [1;32mIn[5], line 4[0m
[0;32m      2[0m DATA_PATH [38;5;241m=[39m [38;5;124m"[39m[38;5;124msalaries.csv[39m[38;5;124m"[39m
[0;32m      3[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m os[38;5;241m.[39mpath[38;5;241m.[39mexists(DATA_PATH):
[1;32m----> 4[0m     [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m([38;5;124m"[39m[38;5;124mNo se encontr√≥ salaries.csv junto al notebook.[39m[38;5;124m"[39m)
[0;32m      6[0m df [38;5;241m=[39m pd[38;5;241m.[39mread_csv(DATA_PATH)
[0;32m      7[0m df [38;5;241m=[39m df[df[[38;5;124m"[39m[38;5;124mwork_year[39m[38;5;124m"[39m] [38;5;241m==[39m [38;5;241m2025[39m][38;5;241m.[39mcopy()

[1;31mFileNotFoundError[0m: No se encontr√≥ salaries.csv junto al notebook.

